on: 
  workflow_call:
    inputs:
      directory:
        type: string
        default: "."
      repos:
        type: string
        description: repos/owner
    secrets:
      TOKEN:
        required: true

jobs:
  run:
    runs-on: ubuntu-latest
    container: ${{ matrix.config.container }}
    strategy:
      matrix:
        config:
        - {container: "ghcr.io/geode-solutions/ubuntu:master", system: "ubuntu", lib: "lib"}
        #- {container: "ghcr.io/geode-solutions/centos:master", system: "rhel", lib: "lib64"}
    steps:
    - name: RepoOwner
      id: reposowner
      run: |
        echo ${{ inputs.repos }}
        repo_name=$(echo "${{ inputs.repos }}"| cut -d'/' -f 1)
        echo ${{ inputs.repos }}
        echo ${{ repo_name }}
        repos_owner=$(echo "${{ inputs.repos }}"| cut -d'/' -f 2)
        echo ${{ inputs.repos }}
        echo ${{repos_owner }}
    - uses: actions/checkout@v3
    - uses: Geode-solutions/actions/get-release@master
      id: repos
      with:
        repository: ${{ steps.reposowner.repo_name }}
        owner: ${{ steps.reposowner.repos_owner }}
        file: '-${{ matrix.config.system }}-private.tar.gz'
        token: ${{ secrets.TOKEN }}
    - name: Libraries
      id: libraries
      run: |
        new_path=$(echo "${{ steps.repos.outputs.path }}" | sed 's/\;/\/${{ matrix.config.lib }}\:/g')
        echo "LD_LIBRARY_PATH=$new_path" >> $GITHUB_ENV
    - name: Compile
      run: |
        mkdir -p build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_PREFIX_PATH="${{ steps.repos.outputs.path }}" -DINCLUDE_PYBIND11:BOOL=ON ..
        cmake --build . -j 2
        cd ${{ inputs.directory }}        
        ctest --output-on-failure -j 2
    - name: Test
      run: |
        mkdir -p test
        cd test
        cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_PREFIX_PATH:PATH="${{ steps.repos.outputs.path }};$GITHUB_WORKSPACE/build/${{ inputs.directory }}/install;$GITHUB_WORKSPACE/build" ../tests
        cmake --build . -j 2
        ctest --output-on-failure -j 2
